train{
    seed=3
    expname=mnist_xent
    dataset = torchvision.datasets.MNIST
    transforms = [torchvision.transforms.ToTensor]
    trans_props{}
    datapath =  datasets
    scheduler = our
    optimizer = torch.optim.Adam
    optimizer_props{
    lr=1.0e-3
    }
    adv_plot_loss{
        enabled=False
        loss_fn = model.adversarial.loss.Xnet
        loss_fn_props{reduction=none}
    }
}

plot{
    resolution = 50
    mc_value = 0.0
    is_uniform_grid = True
    verbose = False
    save_html = True
}

adversarial{
    attacks{
        pgd_whitebox_xent_03{
            attack = advertorch.attacks.LinfPGDAttack
            is_whitebox = True
            props{
                loss_fn = model.common.loss.Xent
                loss_fn_prop{
                    reduction = sum,in_adv=True
                }
                eps = 0.3
                eps_iter = 0.01
                nb_iter = 40
                rand_init = True
                targeted=False
                clip_min = 0.0
                clip_max = 1.0
                }
        }

        pgd_whitebox_margin03{
            attack = advertorch.attacks.LinfPGDAttack
            is_whitebox = True
            props{
                loss_fn = model.common.loss.MarginLoss
                loss_fn_prop{reduction=sum,correct_negative=True,in_adv=True}
                eps = 0.3
                eps_iter = 0.01
                nb_iter = 40
                rand_init = True
                targeted=False
                clip_min = 0.0
                clip_max = 1.0
                }
        }

        pgd_blackbox_xent_03{
            attack = advertorch.attacks.LinfPGDAttack
            is_whitebox = False
            props{
                loss_fn = model.common.loss.Xent
                loss_fn_prop{
                    reduction = sum,in_adv=True
                }
                eps = 0.3
                eps_iter = 0.01
                nb_iter = 40
                rand_init = True
                targeted=False
                clip_min = 0.0
                clip_max = 1.0
                }
        }

        pgd_blackbox_margin03{
            attack = advertorch.attacks.LinfPGDAttack
            is_whitebox = False
            props{
                loss_fn = model.common.loss.MarginLoss
                loss_fn_prop{reduction=sum,correct_negative=True,in_adv=True}
                eps = 0.3
                eps_iter = 0.01
                nb_iter = 40
                rand_init = True
                targeted=False
                clip_min = 0.0
                clip_max = 1.0
                }
        }
    }

    blackbox{
        enabled=False
        type = model.adversarial.archs.WrapNetwork
        networks{
            xent{
                model = model.adversarial.archs.SmallCNN
                expname = mnist/xent
                epoch=200
            }

            madry{
                model = model.adversarial.archs.SmallCNN
                expname = mnist/madry/eps0.3
                epoch=200
            }

            trades{
                model = model.adversarial.archs.SmallCNN
                expname = mnist/trades/eps0.3
                epoch=200
            }

            ours{
                model = model.adversarial.archs.SmallCNN
                expname = mnist/ours/eps0.4
                epoch=200
            }
        }
    }
}

network{
    type = model.adversarial.archs.WrapNetwork
    model = model.adversarial.archs.SmallCNN

    loss{
        loss_type = model.common.loss.Xent
        properties = {reduction=mean,in_adv=False}
    }

    adversarial_training{
        augment = False
    }
}
